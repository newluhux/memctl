* 进程内存操作工具

使用 C 实现的 Linux/Android 进程内存操作工具

** 功能

1. 查看进程内存内容
   
2. 把进程内存导出到文件
   
3. 修改进程内存内容
   
4. 在进程内存内容中搜索
   
** 特性

支持多种方式读写进程内存

1. 读写 /proc/pid/mem 方式(使用 backend procmem 命令切换)
   
2. process_vm_xxxx 方式(使用 backend procvm 命令切换)

** 依赖

1. libc

** 构建

#+BEGIN_SRC
cc main.c -o memctl
#+END_SRC

** 命令

*** open

选中进程以供后续操作


参数:

pid   目标进程的pid号

#+BEGIN_SRC
  open 1234
#+END_SRC

*** close

取消选中进程

#+BEGIN_SRC
  close
#+END_SRC

*** info

格式化打印进程信息，包括:
1. 进程PID
   
2. 内存区域数
   
3. 内存区域范围和信息


#+BEGIN_SRC
  info
#+END_SRC

*** backend

切换使用的读写方式，默认procmem

procmem 方式: 读写 /proc/pid/mem 文件
procvm  方式: 调用 process_vm_xxx 函数

#+BEGIN_SRC
  backend procmem
  backend procvm
#+END_SRC

*** dump

将选中的内存导出到文件

将操作的进程 4000000 到 400000F 之间的内容导出到 test-pid-4000000-400000F.mem 文件:

#+BEGIN_SRC
  dump 4000000 F test
#+END_SRC

*** dumpall

将所有内存区域导出到文件

#+BEGIN_SRC
  dumpall /tmp/dump/pid/test
#+END_SRC

*** print

打印选中内存中的内容

#+BEGIN_SRC
  print 40000 F
#+END_SRC

打印 40000 到 4000F 之间的内容

*** search

在选中内存中搜索内容，并打印找到的位置

#+BEGIN_SRC
  search 40000 F 4F2A
#+END_SRC

打印 40000 到 4000F 之间查找数据 4F2A

注意:

两个16进制数字组成一个字节:

#+BEGIN_SRC
4   4bit
F   4bit
4F  8bit
#+END_SRC

输入的16进制数字个数必须为双数

*** write

在指定内存写入内容

#+BEGIN_SRC
  write 40000 4F2A
#+END_SRC

从 40000 开始，写入 4F2A

注意:

两个16进制数字组成一个字节:

#+BEGIN_SRC
4   4bit
F   4bit
4F  8bit
#+END_SRC

输入的16进制数字个数必须为双数


** 使用

#+BEGIN_SRC
./memctl
> open 20654
> info
PID: 20654
memory regions: 27
virtual memory address range: 400000 401000
perms: PROT_READ MAP_SHARED 
offset: 0
dev: 0:16
inode: 3787526
pathname: /home/luhux/SourceCode/memctl/test/a.out

virtual memory address range: 401000 402000
perms: PROT_READ|PROT_EXEC MAP_SHARED 
offset: 1000
dev: 0:16
inode: 3787526
pathname: /home/luhux/SourceCode/memctl/test/a.out

virtual memory address range: 402000 403000
perms: PROT_READ MAP_SHARED 
offset: 2000
dev: 0:16
inode: 3787526
pathname: /home/luhux/SourceCode/memctl/test/a.out

virtual memory address range: 403000 404000
perms: PROT_READ MAP_SHARED 
offset: 2000
dev: 0:16
inode: 3787526
pathname: /home/luhux/SourceCode/memctl/test/a.out

virtual memory address range: 404000 405000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 3000
dev: 0:16
inode: 3787526
pathname: /home/luhux/SourceCode/memctl/test/a.out

virtual memory address range: 630000 651000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: [heap]

virtual memory address range: 7f453faf0000 7f453faf3000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: 

virtual memory address range: 7f453faf3000 7f453fb15000
perms: PROT_READ MAP_SHARED 
offset: 0
dev: 0:16
inode: 346783
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/libc-2.33.so

virtual memory address range: 7f453fb15000 7f453fc56000
perms: PROT_READ|PROT_EXEC MAP_SHARED 
offset: 22000
dev: 0:16
inode: 346783
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/libc-2.33.so

virtual memory address range: 7f453fc56000 7f453fca6000
perms: PROT_READ MAP_SHARED 
offset: 163000
dev: 0:16
inode: 346783
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/libc-2.33.so

virtual memory address range: 7f453fca6000 7f453fcaa000
perms: PROT_READ MAP_SHARED 
offset: 1b2000
dev: 0:16
inode: 346783
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/libc-2.33.so

virtual memory address range: 7f453fcaa000 7f453fcac000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 1b6000
dev: 0:16
inode: 346783
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/libc-2.33.so

virtual memory address range: 7f453fcac000 7f453fcb5000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: 

virtual memory address range: 7f453fcb5000 7f453fcb9000
perms: PROT_READ MAP_SHARED 
offset: 0
dev: 0:16
inode: 555243
pathname: /gnu/store/vjgf1wq7690zk0rsc301k7rpx3nhvjcm-gcc-12.1.0-lib/lib/libgcc_s.so.1

virtual memory address range: 7f453fcb9000 7f453fcd0000
perms: PROT_READ|PROT_EXEC MAP_SHARED 
offset: 4000
dev: 0:16
inode: 555243
pathname: /gnu/store/vjgf1wq7690zk0rsc301k7rpx3nhvjcm-gcc-12.1.0-lib/lib/libgcc_s.so.1

virtual memory address range: 7f453fcd0000 7f453fcd4000
perms: PROT_READ MAP_SHARED 
offset: 1b000
dev: 0:16
inode: 555243
pathname: /gnu/store/vjgf1wq7690zk0rsc301k7rpx3nhvjcm-gcc-12.1.0-lib/lib/libgcc_s.so.1

virtual memory address range: 7f453fcd4000 7f453fcd5000
perms: PROT_READ MAP_SHARED 
offset: 1e000
dev: 0:16
inode: 555243
pathname: /gnu/store/vjgf1wq7690zk0rsc301k7rpx3nhvjcm-gcc-12.1.0-lib/lib/libgcc_s.so.1

virtual memory address range: 7f453fcd5000 7f453fcd6000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 1f000
dev: 0:16
inode: 555243
pathname: /gnu/store/vjgf1wq7690zk0rsc301k7rpx3nhvjcm-gcc-12.1.0-lib/lib/libgcc_s.so.1

virtual memory address range: 7f453fcd6000 7f453fcd8000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: 

virtual memory address range: 7f453fcd8000 7f453fcd9000
perms: PROT_READ MAP_SHARED 
offset: 0
dev: 0:16
inode: 346774
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/ld-2.33.so

virtual memory address range: 7f453fcd9000 7f453fcfc000
perms: PROT_READ|PROT_EXEC MAP_SHARED 
offset: 1000
dev: 0:16
inode: 346774
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/ld-2.33.so

virtual memory address range: 7f453fcfc000 7f453fd05000
perms: PROT_READ MAP_SHARED 
offset: 24000
dev: 0:16
inode: 346774
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/ld-2.33.so

virtual memory address range: 7f453fd05000 7f453fd07000
perms: PROT_READ MAP_SHARED 
offset: 2c000
dev: 0:16
inode: 346774
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/ld-2.33.so

virtual memory address range: 7f453fd07000 7f453fd09000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 2e000
dev: 0:16
inode: 346774
pathname: /gnu/store/5h2w4qi9hk1qzzgi1w83220ydslinr4s-glibc-2.33/lib/ld-2.33.so

virtual memory address range: 7ffd78fc0000 7ffd78fe2000
perms: PROT_READ|PROT_WRITE MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: [stack]

virtual memory address range: 7ffd78ff1000 7ffd78ff5000
perms: PROT_READ MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: [vvar]

virtual memory address range:  7ffd78ff7000
perms: PROT_READ|PROT_EXEC MAP_SHARED 
offset: 0
dev: 0:0
inode: 0
pathname: [vdso]

> dump 7ffd78ff5000 FF vdsoheadFF
> print 7ffd78ff5000 FF
7f454c46211000000000303e01000b0600000040000000020e000000000040038040400100f0100050000000000000000000000000006cd0000006cd00000001000000020004000e03000000e03000000e0300000020100000020100000080000000400040000500000005000000050000005400000005400000004000000050e57464400054500000054500000
> write 7ffd78ff5000 0123456789ABCDEF
> print 7ffd78ff5000 FF
123456789abcdef00000000303e01000b0600000040000000020e000000000040038040400100f0100050000000000000000000000000006cd0000006cd00000001000000020004000e03000000e03000000e0300000020100000020100000080000000400040000500000005000000050000005400000005400000004000000050e57464400054500000054500000
search 7ffd78ff5000 FF 50e5
7ffd78ff50e8
> print 7ffd78ff50e8 4
50e57464
> exit
#+END_SRC

** 开发计划

- 已经实现 内置一个类似 dos debug 的命令行界面
  
- 尚未实现 内置一个Lisp解释器用于编写复杂逻辑的脚本
